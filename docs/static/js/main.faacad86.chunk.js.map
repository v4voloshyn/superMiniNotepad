{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","countOfLikedPosts","countOfAllPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","event","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","activeBtn","filter","activeClass","key","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","body","newItem","nextId","elem","indexOfDataPostItem","findIndex","oldDataObj","modifiedDataObj","slice","onToggleItemState","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faacad86.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({countOfLikedPosts, countOfAllPosts}) => {\r\n   return(\r\n      <div className=\"app-header d-flex\">\r\n         <h1>Your SUPER mini Notepad</h1>\r\n         <h2>{countOfAllPosts} записей, из них понравилось {countOfLikedPosts}</h2>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         term: ''\r\n      }\r\n      this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n   }\r\n\r\n   onUpdateSearch(event) {\r\n      const term = event.target.value;\r\n      this.setState({\r\n         term: term //можно просто записать term, если по новых стандартах\r\n      });\r\n      this.props.onUpdateSearch(term);\r\n   }\r\n   \r\n   render() {\r\n      return (\r\n         <input\r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск по записям\"\r\n            onChange={this.onUpdateSearch}\r\n         />\r\n      )\r\n   }\r\n}","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\n// import reactstrap from 'reactstrap';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.buttons = [\r\n         { name: 'all', label: 'Все' },\r\n         { name: 'like', label: 'Понравилось' }\r\n      ]\r\n\r\n   }\r\n   render() {\r\n      const buttons = this.buttons.map(({ name, label }) => {\r\n         const activeBtn = this.props.filter === name;\r\n         const outline = activeBtn ? '' : ''\r\n         const activeClass = activeBtn ? 'btn-info' : 'btn-outline-danger';\r\n         return (\r\n            <button key={name}  \r\n            type='button'\r\n            className={`${activeClass} ${outline}`}\r\n            onClick={(() => this.props.onFilterSelect(name))}> {label}</button>\r\n         )\r\n      })\r\n      return (\r\n         <div className=\"btn-group\">\r\n            {buttons}\r\n            {/* <Button color='info'>Всё</Button>\r\n            <Button outline color='danger'>Понравилось</Button> */}\r\n         </div>\r\n      )\r\n   }\r\n}","import PostListItem from \"./post-list-item\";\r\nexport default PostListItem;","import React, { Component } from 'react';\r\n\r\nimport './post-list-item.sass';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n   render() {\r\n      const { label, onDelete, onToggleImportant, onToggleLiked, important, like } = this.props;\r\n      let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n      if (important) { classNames += ' important' }\r\n      if (like) { classNames += ' like' }\r\n\r\n      return (\r\n         <div className={classNames}>\r\n            <span\r\n               className=\"app-list-item-label\"\r\n               onClick={onToggleLiked}>\r\n               {label}\r\n            </span>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n               <button type=\"button\" className=\"btn-star btn-sm\"\r\n                  onClick={onToggleImportant}>\r\n                  <i className=\"fa fa-star\"></i>\r\n               </button>\r\n               <button\r\n                  type=\"button\"\r\n                  className=\"btn-trash btn-sm\"\r\n                  onClick={onDelete}\r\n               >\r\n                  <i className=\"fa fa-trash-o\"></i>\r\n               </button>\r\n\r\n               <i className=\"fa fa-heart\"></i>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import PostList from \"./post-list\";\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n\r\n   const elements = posts.map((item) => {\r\n      const { id, ...itemProps } = item;\r\n      return (\r\n         <li key={id} className='list-group-item'>\r\n            <PostListItem\r\n               {...itemProps}\r\n               onDelete={() => onDelete(id)}\r\n               onToggleImportant={() => onToggleImportant(id)}\r\n               onToggleLiked={() => onToggleLiked(id)} />\r\n         </li>\r\n      )\r\n   })\r\n\r\n\r\n   return (\r\n      <ListGroup className=\"app-list\">\r\n         {elements}\r\n      </ListGroup>\r\n   )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      // Стейт поля ввода текста для новой заметки\r\n      this.state = {\r\n         text: ''\r\n      }\r\n\r\n      this.onValueChange = this.onValueChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n   }\r\n   //Записываем в Стейт последнее значение(value) поля input;\r\n   onValueChange(event) {\r\n      this.setState({\r\n         text: event.target.value\r\n      })\r\n   } \r\n   // Добавляем новую заметку в форму\r\n   onSubmit(event) {\r\n      event.preventDefault();\r\n      // Проверям поле ввода на пустую строку чтоб мы её не смогли добавить в форму\r\n      if (this.state.text === '') {\r\n         event.preventDefault();\r\n      } else { // Если НЕ пустая, то добавляем заметку в форму\r\n         this.props.onAdd(this.state.text);\r\n      }\r\n      //Очищаем инпут ввода текста при отправке\r\n      this.setState({\r\n         text: ''\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <form \r\n         className=\"bottom-panel d-flex\"\r\n         onSubmit={this.onSubmit}\r\n         >\r\n            <input\r\n               type=\"text\"\r\n               placeholder=\"Введите текст заметки сюда\"\r\n               className=\"form-control new-post-label\"\r\n               onChange={this.onValueChange}\r\n               value={this.state.text}\r\n            />\r\n            <button\r\n               type=\"submit\"\r\n               className=\"btn btn-outline-secondary\">\r\n               Добавить\r\n            </button>\r\n         </form>\r\n      );\r\n   }\r\n}","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\nimport nextId from \"react-id-generator\";\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css'\r\n\r\n// import styled from 'styled-components';\r\n\r\nexport default class App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      // Типа Data Base\r\n      this.state = {\r\n         data: [\r\n            { label: 'Going to learn React', important: false, like: false, id: '1' },\r\n            { label: 'Have a lunch', important: false, like: false, id: '2' },\r\n            { label: 'Go to sport', important: true, like: false, id: '3' },\r\n         ],\r\n         term: '',\r\n         filter: 'all'\r\n      } //---\r\n      this.deleteItem = this.deleteItem.bind(this);\r\n      this.addItem = this.addItem.bind(this);\r\n      this.onToggleImportant = this.onToggleImportant.bind(this);\r\n      this.onToggleLiked = this.onToggleLiked.bind(this);\r\n      this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n      this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n      this.maxId = 4;\r\n   }\r\n\r\n   //Добавляем елемент в список\r\n   addItem(body) {\r\n      //Определяем константу генератора случайных ID react-id-generator\r\n      const uniqId = nextId();\r\n      const newItem = {\r\n         label: body,\r\n         important: false,\r\n         like: false,\r\n         id: uniqId\r\n      }\r\n      this.setState(\r\n         ({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            // console.log(newItem.id);\r\n            return {\r\n               data: newArr\r\n            }\r\n         }\r\n      )\r\n   }\r\n   //---Добавляем елемент в список\r\n\r\n   // Удаляем елемент со списка\r\n   deleteItem(id) {\r\n      this.setState(\r\n         ({ data }) => {\r\n            const result = data.filter(elem => elem.id !== id)\r\n            return {\r\n               data: result\r\n            }\r\n            // const index = data.findIndex(elem => elem.id === id);\r\n\r\n            // const dataBeforeRemoveItem = data.slice(0, index);\r\n            // const dataAfterRemoveItem = data.slice(index + 1);\r\n\r\n            // const newArrData =[...dataBeforeRemoveItem, ...dataAfterRemoveItem];\r\n\r\n            // return {\r\n            //    data: newArrData\r\n            // }\r\n         })\r\n   }\r\n   //---Удаляем елемент со списка\r\n\r\n   // Общий тоглер состояний Like or Important\r\n   onToggleItemState(id, state) {\r\n      this.setState(({ data }) => {\r\n         const indexOfDataPostItem = data.findIndex(elem => elem.id === id);\r\n\r\n         const oldDataObj = data[indexOfDataPostItem];\r\n         const modifiedDataObj = { ...oldDataObj, [state]: !oldDataObj.[state] };\r\n\r\n         const newDataArr = [...data.slice(0, indexOfDataPostItem), modifiedDataObj, ...data.slice(indexOfDataPostItem + 1)];\r\n\r\n         return {\r\n            data: newDataArr\r\n         }\r\n      })\r\n   }\r\n\r\n   // Тоглер Важных постов на странице\r\n   onToggleImportant(id) {\r\n      this.onToggleItemState(id, 'important')\r\n   }\r\n   // ---Тоглер Важных постов на странице\r\n\r\n   // Тоглер Лайкнутых постов на странице\r\n   onToggleLiked(id) {\r\n      this.onToggleItemState(id, 'like')\r\n   }\r\n   // --- Тоглер Лайкнутых постов на странице\r\n\r\n   // Поиск по заметкам\r\n   searchPost(items, term) {\r\n      if (term.length === 0) {\r\n         return items;\r\n      }\r\n\r\n      return items.filter((item) => {\r\n         return item.label.indexOf(term) > -1;\r\n      })\r\n\r\n   }\r\n\r\n   filterPost(items, filter) {\r\n      if (filter === 'like') {\r\n         return items.filter(item => item.like);\r\n      } else {\r\n         return items;\r\n      }\r\n   }\r\n\r\n   // Функция обновления state'a  для рендеринга SearchPanel\r\n   onUpdateSearch(term) {\r\n      this.setState({ term });\r\n   }\r\n\r\n   onFilterSelect(filter) {\r\n      this.setState({ filter });\r\n\r\n   }\r\n\r\n   render() {\r\n      // Деструктурируем data state\r\n      const { data, term, filter } = this.state;\r\n\r\n      const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n      const countOfLikedPosts = data.filter(item => item.like).length;\r\n      const countOfAllPosts = data.length;\r\n      // Константа - фильтр входящих данных на наличие заголовка и ID\r\n      // const filteredData = data\r\n      //    .filter(item => item && item.hasOwnProperty('id') && item.label !== '')\r\n\r\n      return (\r\n         <div className=\"app\">\r\n            <AppHeader\r\n               countOfLikedPosts={countOfLikedPosts}\r\n               countOfAllPosts={countOfAllPosts}\r\n            />\r\n            <div className=\"search-panel d-flex\">\r\n               <SearchPanel\r\n                  onUpdateSearch={this.onUpdateSearch}\r\n               />\r\n               <PostStatusFilter\r\n                  filter={filter}\r\n                  onFilterSelect={this.onFilterSelect}\r\n               />\r\n            </div>\r\n            <PostList\r\n               posts={visiblePosts} //filteredData\r\n               onDelete={this.deleteItem}\r\n               onToggleImportant={this.onToggleImportant}\r\n               onToggleLiked={this.onToggleLiked}\r\n            />\r\n            <PostAddForm\r\n               onAdd={this.addItem}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}